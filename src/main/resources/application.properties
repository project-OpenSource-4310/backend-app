#server.port
server.port=8383
server.address=0.0.0.0
spring.profiles.active=test
# Spring Application Name
spring.application.name=Autonexo

# Spring DataSource Configuration
#spring.datasource.url=jdbc:mysql://localhost:3306/autonexo_db?useSSL=false&serverTimezone=UTC
spring.datasource.url=jdbc:mysql://34.133.29.100:3306/autonexo_db?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Kratosllego#12
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Spring Data JPA Configuration
spring.jpa.show-sql=true

#Spring Data JPA Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.naming.physical-strategy=com.autonexo.shared.infrastructure.persistence.jpa.configuration.strategy.SnakeCaseWithPluralizedTablePhysicalNamingStrategy

# Application Information for Documentation

# Elements take their values from maven pom.xml build-related information
documentation.application.description=@project.description@
documentation.application.version=@project.version@

# JWT Configuration Properties
authorization.jwt.secret = WriteHereYourSecretStringForTokenSigningCredentials
authorization.jwt.expiration.days = 7

# CORS Configuration
spring.graphql.cors.allowed-origins=https://front-opensource.web.app
spring.graphql.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.graphql.cors.allowed-headers=Origin,Accept,X-Requested-With,Content-Type,Authorization,Access-Control-Request-Method,Access-Control-Request-Headers
spring.graphql.cors.allow-credentials=true

# ====================
# SPRING SECURITY BASIC AUTH
# ====================
#spring.security.user.name=admin
#spring.security.user.password=admin123
#spring.security.user.roles=ADMIN